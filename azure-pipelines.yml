variables: { skipComponentGovernanceDetection: true }

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: AzureResourceGroupDeployment@2
  displayName: Validate infra as code
  inputs:
    azureSubscription: 'ConnexionAzure'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'RG-OssNewsletters'
    location: 'West Europe'
    templateLocation: 'Linked artifact'
    csmFile: 'deploy/azuredeploy.json'
    deploymentMode: 'Validation'

- bash: 'sudo apt-get update'
  displayName: 'Apt get update'

- bash: 'sudo apt-get install --assume-yes pandoc'
  displayName: 'Install pandoc'

- bash: 'sudo apt-get install --assume-yes moreutils'
  displayName: 'Install moreutils'

- task: Bash@3
  displayName: 'transform markdown to html'
  inputs:
    targetType: 'inline'
    script: 
      for filename in $(ls ./newsletters/); 
      do
          
          if [[ "$filename" == *".md"* ]] && [[ "$filename" != *"index.md"* ]];then
            echo 'processing '${filename};
            echo 'injecting header & footer...';
            echo 'HEADER_TOKEN' | cat - ./newsletters/${filename} | sponge ./newsletters/${filename};
            echo "FOOTER_TOKEN" >> ./newsletters/${filename};

            echo 'transforming $filename...';
            pandoc -s -f markdown -t html5 -c ./css/oss.css ./newsletters/${filename} -o ./newsletters/${filename%%.*}.html;
            echo "[${filename%%.*}](${filename%%.*}.html)" >> ./newsletters/index.md;
            
          fi
      done;
      echo 'generating index...';
      pandoc -s -f markdown -t html5 -c ./css/oss.css ./newsletters/index.md -o ./newsletters/index.html;
      rm -f ./newsletters/index.md;
      echo 'generation done';

- task: Bash@3
  displayName: 'injecting header & footer in html'
  inputs:
    targetType: 'inline'
    script: 
      for filename in $(ls ./newsletters/); 
      do
          if [[ "$filename" == *".html"* ]];then
            echo 'processing '${filename};
            inject=$(cat ./newsletters/content/footer.html)
            echo $inject;
            sed -i 's|FOOTER_TOKEN|$inject|' ./newsletters/${filename};
          fi
      done;

- task: CopyFiles@2
  displayName: copy html files
  inputs:
    SourceFolder: '.'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'